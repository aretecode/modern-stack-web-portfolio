/**
 * @see https://nextjs.org/docs/
 * @see https://github.com/dfrankland/react-amphtml/issues/29
 */
import * as React from 'react'
import Document, { Html, Head, Main, NextScript } from 'next/document'
import { ServerStyleSheet } from 'styled-components'
import {
  AmpScripts,
  AmpScriptsManager,
  headerBoilerplate,
} from 'react-amphtml/setup'
import * as Amp from 'react-amphtml'

export default class MyDocument extends Document {
  static async getInitialProps(ctx) {
    const ampScripts = new AmpScripts()
    const sheet = new ServerStyleSheet()
    const originalRenderPage = ctx.renderPage

    try {
      ctx.renderPage = () =>
        originalRenderPage({
          enhanceApp: App => props =>
            sheet.collectStyles(
              <AmpScriptsManager ampScripts={ampScripts}>
                <App {...props} />
              </AmpScriptsManager>
            ),
        })

      const ampScriptTags = ampScripts.getScriptElements()
      const initialProps = await Document.getInitialProps(ctx)
      // AMP only allows for 1 style tag, so we need to compbine all the style
      // tags generated by styled-components
      /* eslint-disable react/no-danger */
      const ampStyleTag = (
        <style
          amp-custom=""
          dangerouslySetInnerHTML={{
            __html: sheet
              .getStyleElement()
              .reduce(
                (
                  css,
                  {
                    props: {
                      dangerouslySetInnerHTML: { __html = '' } = {},
                    } = {},
                  } = {}
                ) => `${css}${__html}`,
                ''
              ),
          }}
        />
      )

      return {
        ...initialProps,
        styles: (
          <>
            {initialProps.styles}
            {sheet.getStyleElement()}
          </>
        ),
        ampScriptTags,
        ampStyleTag,
      }
      /* eslint-enable */
    } finally {
      sheet.seal()
    }
  }

  render() {
    const {
      title,
      url,
      ampScriptTags,
      ampStyleTag,
      ...remainingProps
    } = this.props

    return (
      <Amp.Html specName="html âš¡ for top-level html" lang="en" amp="amp">
        <Head>
          {title}
          {headerBoilerplate(url)}
          {ampScriptTags}
          {ampStyleTag}
        </Head>
        <body>
          <Main />
          <NextScript />
        </body>
      </Amp.Html>
    )
  }
}
